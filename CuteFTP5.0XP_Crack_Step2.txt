第二步禁止加载时完成注册

CuteFTP为了安全考虑或者其它原因使用了异步方式实现了在线注册功能。
它很有可能同样使用异步方式实现加载时注册，用IDA查找CreateThread,
beginthread,AfxBeginThread，查找有哪些线程，不能确定哪些线程是
程序启动的时候生成的话，只能逐一分析了。当然，在所有的线程函数的
开始位置都设置断点也是可以的，只不过提前分析一下还是比较高效的。
CuteFTP中共有下面的线程
CreateThread
00405120
004260E0
004270B0
00487870
004878D0
004AE4D0
004AE780
004AE8E0
004AEA20
004AEC80
004B7290
004B7730

beginthread
00403D70                                    -①
00476590
004779B0

AfxBeginThread
00401500
00476860

看一下①的代码段
.text:00403D70                 mov     eax, large fs:0
.text:00403D76                 push    0FFFFFFFFh
.text:00403D78                 push    offset loc_5076D1
.text:00403D7D                 push    eax
.text:00403D7E                 mov     eax, [esp+0Ch+arg_0]
.text:00403D82                 mov     large fs:0, esp
.text:00403D89                 sub     esp, 0BDCh
.text:00403D8F                 test    eax, eax
.text:00403D91                 push    ebx
.text:00403D92                 push    ebp
.text:00403D93                 push    esi
.text:00403D94                 push    edi
.text:00403D95                 jz      loc_4040BB
.text:00403D9B                 mov     ecx, [eax+4]
.text:00403D9E                 mov     ebp, [eax]
.text:00403DA0                 mov     ebx, [eax+8]
.text:00403DA3                 push    eax
.text:00403DA4                 mov     [esp+0BFCh+var_BE8], ecx
.text:00403DA8                 call    sub_4DCE1D
.text:00403DAD                 add     esp, 4
.text:00403DB0                 test    ebx, ebx
.text:00403DB2                 jz      loc_4040BB
.text:00403DB8                 lea     esi, [ebp+30h]
.text:00403DBB                 mov     byte ptr [esi], 0
.text:00403DBE                 mov     edx, off_557258
.text:00403DC4                 mov     [esp+0BF8h+var_BE4], edx
.text:00403DC8                 mov     ecx, 0FAh
.text:00403DCD                 xor     eax, eax
.text:00403DCF                 mov     edi, esi
.text:00403DD1                 mov     [esp+0BF8h+var_4], 0
.text:00403DDC                 rep stosd
.text:00403DDE                 lea     eax, [esp+0BF8h+cbData]
.text:00403DE2                 lea     ecx, [esp+0BF8h+var_BC4]
.text:00403DE6                 push    eax             ; lpcbData
.text:00403DE7                 push    ecx             ; int
.text:00403DE8                 push    esi             ; lpData
.text:00403DE9                 mov     ecx, ebp
.text:00403DEB                 call    sub_4039B0
.text:00403DF0                 test    eax, eax
.text:00403DF2                 jnz     loc_403F97
.text:00403DF8                 mov     al, [esi]
.text:00403DFA                 or      edi, 0FFFFFFFFh
.text:00403DFD                 test    al, al
.text:00403DFF                 jz      loc_403F78
.text:00403E05                 lea     edx, [esp+0BF8h+var_BDC]
.text:00403E09                 push    esi             ; char *
.text:00403E0A                 push    edx             ; int
.text:00403E0B                 mov     [esp+0C00h+var_BDC], 7FFFFFFFh
.text:00403E13                 call    sub_40B9E0
.text:00403E18                 add     esp, 8
.text:00403E1B                 test    ax, ax
.text:00403E1E                 jz      loc_403FC6
.text:00403E24                 mov     eax, [esp+0BF8h+var_BE8]
.text:00403E28                 test    eax, eax
.text:00403E2A                 jz      loc_403F8B
.text:00403E30                 push    offset aHttp    ; "http://"                 -HTTP头
.text:00403E35                 lea     ecx, [esp+0BFCh+lpszUrl]
.text:00403E39                 call    sub_4DC819
.text:00403E3E                 lea     eax, [esp+0BF8h+String]
.text:00403E42                 push    0Ah             ; int
.text:00403E44                 push    eax             ; char *
.text:00403E45                 push    50h             ; int
.text:00403E47                 mov     byte ptr [esp+0C04h+var_4], 1
.text:00403E4F                 call    __itoa
.text:00403E54                 add     esp, 0Ch
.text:00403E57                 lea     ecx, [esp+0BF8h+var_BE8]
.text:00403E5B                 push    offset aWww_globalscap ; "www.globalscape.com/images/testconnect."...   -testconnect.gif
.text:00403E60                 call    sub_4DC819
.text:00403E65                 push    offset asc_5515AC ; "/"
.text:00403E6A                 lea     ecx, [esp+0BFCh+var_BE8]
.text:00403E6E                 mov     byte ptr [esp+0BFCh+var_4], 2
.text:00403E76                 call    sub_4D31A6
.text:00403E7B                 mov     esi, eax
.text:00403E7D                 cmp     esi, edi
.text:00403E7F                 jz      short loc_403EB0
.text:00403E81                 push    offset asc_5515A8 ; ":"
.text:00403E86                 push    esi             ; int
.text:00403E87                 lea     ecx, [esp+0C00h+var_BE8]
.text:00403E8B                 call    sub_4D2D06
.text:00403E90                 lea     ecx, [esp+0BF8h+String]
.text:00403E94                 inc     esi
.text:00403E95                 push    ecx             ; lpString
.text:00403E96                 push    esi             ; int
.text:00403E97                 lea     ecx, [esp+0C00h+var_BE8]
.text:00403E9B                 call    sub_4D2D06
.text:00403EA0                 lea     edx, [esp+0BF8h+var_BE8]
.text:00403EA4                 lea     ecx, [esp+0BF8h+lpszUrl]
.text:00403EA8                 push    edx
.text:00403EA9                 call    ??YCString@@QAEABV0@ABV0@@Z ; CString::operator+=(CString const &)
.text:00403EAE                 jmp     short loc_403EDA
.text:00403EB0 ; ???????????????????????????????????????????????????????????????????????????
.text:00403EB0
.text:00403EB0 loc_403EB0:                             ; CODE XREF: sub_403D70+10Fj
.text:00403EB0                 push    offset aWww_globalscap ; "www.globalscape.com/images/testconnect."...
.text:00403EB5                 lea     ecx, [esp+0BFCh+lpszUrl]
.text:00403EB9                 call    sub_4DCB87
.text:00403EBE                 push    offset asc_5515A8 ; ":"
.text:00403EC3                 lea     ecx, [esp+0BFCh+lpszUrl]
.text:00403EC7                 call    sub_4DCB87
.text:00403ECC                 lea     eax, [esp+0BF8h+String]
.text:00403ED0                 lea     ecx, [esp+0BF8h+lpszUrl]
.text:00403ED4                 push    eax             ; lpString
.text:00403ED5                 call    sub_4DCB87
.text:00403EDA
.text:00403EDA loc_403EDA:                             ; CODE XREF: sub_403D70+13Ej
.text:00403EDA                 mov     ecx, [esp+0BF8h+lpszUrl]
.text:00403EDE                 push    ecx             ; lpszUrl
.text:00403EDF                 call    sub_4AD410
.text:00403EE4                 add     esp, 4
.text:00403EE7                 test    eax, eax
.text:00403EE9                 jz      short loc_403F37
.text:00403EEB                 push    0               ; lParam
.text:00403EED                 push    1527h           ; wParam

一直很好奇CuteFTP是如何实现判断网络是否处于连接状态，
如果网络不是连接状态（伪连接），那么序号就可以正常使用了。
注意下面的代码
00403E30                 push    offset aHttp    ; "http://"
00403E5B                 push    offset aWww_globalscap ; "www.globalscape.com/images/testconnect."
连起来就是http://www.globalscape.com/images/testconnect.gif
testconnect，感觉好亲切，

:bpx 00403D70

001B:00403D70  MOV       EAX,FS:[00000000]
001B:00403D76  PUSH      FF
001B:00403D78  PUSH      005076D1
001B:00403D7D  PUSH      EAX
001B:00403D7E  MOV       EAX,[ESP+10]
001B:00403D82  MOV       FS:[00000000],ESP
001B:00403D89  SUB       ESP,00000BDC
001B:00403D8F  TEST      EAX,EAX
001B:00403D91  PUSH      EBX
001B:00403D92  PUSH      EBP
001B:00403D93  PUSH      ESI
001B:00403D94  PUSH      EDI
001B:00403D95  JZ       004040BB
001B:00403D9B  MOV       ECX,[EAX+04]
001B:00403D9E  MOV       EBP,[EAX]
001B:00403DA0  MOV       EBX,[EAX+08]
001B:00403DA3  PUSH      EAX
001B:00403DA4  MOV       [ESP+14],ECX
001B:00403DA8  CALL     004DCE1D
001B:00403DAD  ADD       ESP,04
001B:00403DB0  TEST      EBX,EBX
001B:00403DB2  JZ       004040BB
001B:00403DB8  LEA       ESI,[EBP+30]
001B:00403DBB  MOV       BYTE PTR [ESI],00
001B:00403DBE  MOV       EDX,[00557258]
001B:00403DC4  MOV       [ESP+14],EDX
001B:00403DC8  MOV       ECX,000000FA
001B:00403DCD  XOR       EAX,EAX
001B:00403DCF  MOV       EDI,ESI
001B:00403DD1  MOV       DWORD PTR [ESP+00000BF4],00000000
001B:00403DDC  REPZ STOSD
001B:00403DDE  LEA       EAX,[ESP+30]
001B:00403DE2  LEA       ECX,[ESP+34]
001B:00403DE6  PUSH      EAX
001B:00403DE7  PUSH      ECX
001B:00403DE8  PUSH      ESI
001B:00403DE9  MOV       ECX,EBP
001B:00403DEB  CALL     004039B0
001B:00403DF0  TEST      EAX,EAX
001B:00403DF2  JNZ      00403F97
001B:00403DF8  MOV       AL,[ESI]
001B:00403DFA  OR        EDI,-01
001B:00403DFD  TEST      AL,AL
001B:00403DFF  JZ       00403F78
001B:00403E05  LEA       EDX,[ESP+1C]
001B:00403E09  PUSH      ESI
001B:00403E0A  PUSH      EDX
001B:00403E0B  MOV       DWORD PTR [ESP+24],7FFFFFFF
001B:00403E13  CALL     0040B9E0
001B:00403E18  ADD       ESP,08
001B:00403E1B  TEST      AX,AX
001B:00403E1E  JZ       00403FC6
001B:00403E24  MOV       EAX,[ESP+10]
001B:00403E28  TEST      EAX,EAX
001B:00403E2A  JZ       00403F8B
001B:00403E30  PUSH      005515DC ; "http://"
001B:00403E35  LEA       ECX,[ESP+1C]
001B:00403E39  CALL     004DC819
001B:00403E3E  LEA       EAX,[ESP+24]
001B:00403E42  PUSH      0A
001B:00403E44  PUSH      EAX
001B:00403E45  PUSH      50
001B:00403E47  MOV       BYTE PTR [ESP+00000C00],01
001B:00403E4F  CALL     004C1B97
001B:00403E54  ADD       ESP,0C
001B:00403E57  LEA       ECX,[ESP+10]
001B:00403E5B  PUSH      005515B0 ; "www.globalscape.com/images/testconnect.gif"
001B:00403E60  CALL     004DC819
001B:00403E65  PUSH      005515AC
001B:00403E6A  LEA       ECX,[ESP+14]
001B:00403E6E  MOV       BYTE PTR [ESP+00000BF8],02
001B:00403E76  CALL     004D31A6
001B:00403E7B  MOV       ESI,EAX
001B:00403E7D  CMP       ESI,EDI
001B:00403E7F  JZ       00403EB0
001B:00403E81  PUSH      005515A8
001B:00403E86  PUSH      ESI
001B:00403E87  LEA       ECX,[ESP+18]
001B:00403E8B  CALL     004D2D06
001B:00403E90  LEA       ECX,[ESP+24]
001B:00403E94  INC       ESI
001B:00403E95  PUSH      ECX
001B:00403E96  PUSH      ESI
001B:00403E97  LEA       ECX,[ESP+18]
001B:00403E9B  CALL     004D2D06
001B:00403EA0  LEA       EDX,[ESP+10]
001B:00403EA4  LEA       ECX,[ESP+18]
001B:00403EA8  PUSH      EDX
001B:00403EA9  CALL     004DCBC3
001B:00403EAE  JMP      00403EDA
001B:00403EB0  PUSH      005515B0 ; "www.globalscape.com/images/testconnect.gif"
001B:00403EB5  LEA       ECX,[ESP+1C]
001B:00403EB9  CALL     004DCB87
001B:00403EBE  PUSH      005515A8
001B:00403EC3  LEA       ECX,[ESP+1C]
001B:00403EC7  CALL     004DCB87
001B:00403ECC  LEA       EAX,[ESP+24]
001B:00403ED0  LEA       ECX,[ESP+18]
001B:00403ED4  PUSH      EAX
001B:00403ED5  CALL     004DCB87
001B:00403EDA  MOV       ECX,[ESP+18]
001B:00403EDE  PUSH      ECX                -http://www.globalscape.com/images/testconnect.gif
:d ecx
0010:00CFDFD8 70747468  772F2F3A  672E7777  61626F6C      http://www.globa
0010:00CFDFE8 6163736C  632E6570  383A6D6F  6D692F30      lscape.com:80/im
0010:00CFDFF8 73656761  7365742F  6E6F6374  7463656E      ages/testconnect
0010:00CFE008 6669672E  00000000  00000000  00000000      .gif............
0010:00CFE018 00000000  00000001  00000008  00000040      ............@...
0010:00CFE028 AEBBC6BC  736C782E  00000000  00000000      .....xls........
0010:00CFE038 00000000  00000000  00000000  00000000      ................
0010:00CFE048 00000000  00000000  00000000  00000000      ................
001B:00403EDF  CALL     004AD410           -②判断网络连接状态
001B:00403EE4  ADD       ESP,04
001B:00403EE7  TEST      EAX,EAX            -断开网络为0，连接网络为1
001B:00403EE9  JZ       00403F37
001B:00403EEB  PUSH      00
001B:00403EED  PUSH      00001527
001B:00403EF2  MOV       EAX,00000001
001B:00403EF7  PUSH      00000111
001B:00403EFC  PUSH      EBX
001B:00403EFD  MOV       [EBP+08],EAX
001B:00403F00  MOV       [EBP+0C],EAX
001B:00403F03  CALL      [USER32!PostMessageA]

注意00403EDF  CALL     004AD410的返回值，断开网络为0，连接网络为1。
所以需要
:bpx 004AD410
再次进入004AD410
001B:004AD410  PUSH      ECX
001B:004AD411  PUSH      ESI
001B:004AD412  PUSH      EDI
001B:004AD413  LEA       EAX,[ESP+08]
001B:004AD417  PUSH      00
001B:004AD419  PUSH      EAX                -"www.globalscape.com/images/testconnect.gif"
001B:004AD41A  CALL      [0051C85C]         -网络状态判断函数
001B:004AD420  MOV       EDI,EAX            -断开网络为0，连接网络为1
001B:004AD422  TEST      EDI,EDI
001B:004AD424  JZ       004AD480
001B:004AD426  PUSH      00
001B:004AD428  PUSH      00
001B:004AD42A  PUSH      00
001B:004AD42C  PUSH      00
001B:004AD42E  PUSH      00556D98 ; "InternetConn"
001B:004AD433  CALL      [0051C860]
001B:004AD439  MOV       ESI,EAX
001B:004AD43B  TEST      ESI,ESI
001B:004AD43D  JZ       004AD47A
001B:004AD43F  MOV       ECX,[ESP+10]
001B:004AD443  PUSH      EBX
001B:004AD444  PUSH      00
001B:004AD446  PUSH      80000000
001B:004AD44B  PUSH      00
001B:004AD44D  PUSH      00
001B:004AD44F  PUSH      ECX
001B:004AD450  PUSH      ESI
001B:004AD451  CALL      [0051C854]
001B:004AD457  MOV       EBX,[0051C858]
001B:004AD45D  TEST      EAX,EAX
001B:004AD45F  JZ       004AD46E
001B:004AD461  PUSH      EAX
001B:004AD462  CALL      EBX
001B:004AD464  PUSH      ESI
001B:004AD465  CALL      EBX
001B:004AD467  MOV       EAX,EDI            -③错误连接,赋值1
001B:004AD469  POP       EBX
001B:004AD46A  POP       EDI
001B:004AD46B  POP       ESI
001B:004AD46C  POP       ECX
001B:004AD46D  RET
001B:004AD46E  PUSH      ESI
001B:004AD46F  XOR       EDI,EDI
001B:004AD471  CALL      EBX
001B:004AD473  MOV       EAX,EDI            --正确连接,赋值0
001B:004AD475  POP       EBX
001B:004AD476  POP       EDI
001B:004AD477  POP       ESI
001B:004AD478  POP       ECX
001B:004AD479  RET

只需要将③004AD467  MOV       EAX,EDI
修改为XOR EAX,EAX
修改方法:
:d 004AD467
显示5F 5B C7 8B...
:a 004AD467
输入XOR EAX,EAX
之后再
:d 004AD467
显示5F 5B C0 33...
用UE打开cutftp32.exe，将57 5B C7 8B...修改为57 5B C0 33...，保存退出。
注意BigEndian的问题。


或者简单的方法为：
注意00403E5B  PUSH      005515B0 ; "www.globalscape.com/images/testconnect.gif"
看来该测试网络状态的字符串为hard coding
IDA查看005515B0：
001515b0h: 77 77 77 2E 67 6C 6F 62 61 6C 73 63 61 70 65 2E ; www.globalscape.
001515c0h: 63 6F 6D 2F 69 6D 61 67 65 73 2F 74 65 73 74 63 ; com/images/testc
001515d0h: 6F 6E 6E 65 63 74 2E 67 69 66                   ; onnect.gif
直接用UE把testconnect.gif改为testconnect.gig即可

重新连接网络，再次启动CuteFTP，成功了？
感觉很爽，弹出下面的对话框,
“CuteFTP自校验失败。这意味着您可能正在使用一个已损坏的版本。
这可能是病毒引起的。请执行病毒扫描，重新安装CuteFTP并尝试再重新启动。”

看来CuteFTP为防止crack，加入了自校验程序，比如CRC或者MD5等，
接下来将分析自校验的破解方法。
